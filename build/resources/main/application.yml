spring:
  application.name: Payment
  datasource:
    url: jdbc:postgresql://${database.endpoint}/${database.name}
    username: ${database.user}
    password: ${database.password}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    producer:
      bootstrap-servers: localhost:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

    consumer:
      bootstrap-servers: localhost:29092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          deserializer:
            value:
              delegate: org.apache.kafka.common.serialization.StringDeserializer
database:
  endpoint: localhost:5432
  name: sopp
  user: db_user
  password: db_pass
server:
  port: 8083
firebase:
  credentials:
    path: serviceAccountKey.json
sopp:
  server:
    wallet:
      url: http://localhost:8082
